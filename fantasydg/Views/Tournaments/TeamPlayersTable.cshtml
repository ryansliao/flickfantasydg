@model IEnumerable<fantasydg.Models.PlayerTournament>

@{
    var fantasyMap = ViewBag.FantasyMap as Dictionary<(int, int, string), float> ?? new();
    var leagueName = ViewBag.LeagueName as string;
    var leagueId = (int)ViewBag.LeagueId;
    var teamId = (int)ViewBag.TeamId;
    var division = (string)ViewBag.SelectedDivision;
    var tournamentId = (int)ViewBag.SelectedTournamentId;
    var teamMap = ViewBag.PlayerTeamMap as Dictionary<int, string>;
    var statusMap = ViewBag.StatusMap as Dictionary<(int, int, int), string>;
}

<div id="tableWrapper" class="d-none table-scroll-container">
    <div class="table-scroll-top"></div>
    <table id="playersTable" class="stats-table stripe">
        <thead>
            <tr>
                <th>Team</th>
                <th>Player</th>
                <th>Status</th>
                <th>Points</th>
                <th>Place</th>
                <th>Total</th>
                <th>Birdie-</th>
                <th>Eagle-</th>
                <th>Bogey+</th>
                <th>Double Bogey+</th>
                <th>Fairway</th>
                <th>C1 In-Reg</th>
                <th>C2 In-Reg</th>
                <th>Parked</th>
                <th>Scramble</th>
                <th>OB</th>
                <th>C1x Putting</th>
                <th>C2 Putting</th>
                <th>Putt Distance</th>
                <th>Long Throw-In</th>
                <th>Avg. Putt Distance</th>
                <th>Strokes Gained</th>
                <th>SG Putting</th>
                <th>SG Tee→Green</th>
                <th>SG C1x Putting</th>
                <th>SG C2 Putting</th>
            </tr>
        </thead>
        <tbody>
            @{
                var sortedPlayers = Model
                .OrderBy(pt => teamMap.TryGetValue(pt.PDGANumber, out var teamName) ? teamName : "")
                .ThenBy(pt =>
                statusMap.TryGetValue((teamId, pt.PDGANumber, pt.TournamentId), out var s)
                ? (s == "Starter" ? 0 : 1)
                : 2)
                .ThenBy(pt => pt.Place)
                .ToList();
            }

            @foreach (var pt in sortedPlayers)
            {
                var key = (pt.PDGANumber, pt.TournamentId, pt.Division);
                var status = statusMap.TryGetValue((teamId, pt.PDGANumber, pt.TournamentId), out var s) ? s : "Unknown";
                float points = fantasyMap.ContainsKey(key) ? fantasyMap[key] : 0f;

                <tr class="@(status == "Bench" ? "table-secondary" : "")">
                    <td>@(ViewBag.PlayerTeamMap[pt.PDGANumber])</td>
                    <td>@pt.Player.Name</td>
                    <td>
                        @if (status == "Bench")
                        {
                            <span class="badge bg-danger">Bench</span>
                        }
                        else if (status == "Starter")
                        {
                            <span class="badge bg-success">Starter</span>
                        }
                        else
                        {
                            <span class="badge bg-secondary">Unknown</span>
                        }
                    </td>
                    <td>@points.ToString("0.0")</td>
                    <td>@pt.Place</td>
                    <td>@pt.TotalToPar</td>
                    <td>@pt.BirdieMinus%</td>
                    <td>@pt.EagleMinus%</td>
                    <td>@pt.BogeyPlus%</td>
                    <td>@pt.DoubleBogeyPlus%</td>
                    <td>@pt.Fairway%</td>
                    <td>@pt.C1InReg%</td>
                    <td>@pt.C2InReg%</td>
                    <td>@pt.Parked%</td>
                    <td>@pt.Scramble%</td>
                    <td>@pt.ObRate%</td>
                    <td>@pt.C1xPutting%</td>
                    <td>@pt.C2Putting%</td>
                    <td>@pt.TotalPuttDistance</td>
                    <td>@pt.LongThrowIn</td>
                    <td>@pt.AvgPuttDistance</td>
                    <td>@pt.StrokesGainedTotal</td>
                    <td>@pt.StrokesGainedPutting</td>
                    <td>@pt.StrokesGainedTeeToGreen</td>
                    <td>@pt.StrokesGainedC1xPutting</td>
                    <td>@pt.StrokesGainedC2Putting</td>
                </tr>
            }
        </tbody>
    </table>
</div>