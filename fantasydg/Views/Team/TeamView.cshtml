@model fantasydg.Models.ViewModels.TeamViewModel
@using fantasydg.Models.ViewModels
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery

@{
    Layout = "_Layout";
    var teamId = ViewBag.TeamId as int?;
    var tokens = Antiforgery.GetAndStoreTokens(Context);
    var league = Model.Team.League;
    var types = new[] {
        new { Key = "Starter", Label = "Starters", Count = league.StarterCount },
        new { Key = "Bench", Label = "Bench", Count = league.BenchCount }
    };
    bool isLocked = ViewBag.IsLocked != null && (bool)ViewBag.IsLocked;
    var teams = ViewBag.OtherTeams as List<fantasydg.Models.Team>;
    int selectedTeamId = ViewBag.SelectedTeamId;
    bool isOwnTeam = teamId == selectedTeamId;
}

@section Styles {
    <link rel="stylesheet" href="~/css/teamView.css" />
}

@section Scripts {
    <script src="~/js/teamView.js"></script>
}

@{
    var toastMessages = new List<object>();

    if (TempData["RosterLock"] != null)
        toastMessages.Add(new { text = TempData["RosterLock"], type = "success" });

    if (TempData["RosterLockError"] != null)
        toastMessages.Add(new { text = TempData["RosterLockError"], type = "danger" });

    if (TempData["RosterLockWarning"] != null)
        toastMessages.Add(new { text = TempData["RosterLockWarning"], type = "warning" });

    var toastJson = System.Text.Json.JsonSerializer.Serialize(toastMessages);
}

<script id="server-toast-data" type="application/json">
    @Html.Raw(toastJson)
</script>

<body data-is-own-team="@isOwnTeam.ToString().ToLower()"
      data-team-id="@teamId"
      data-request-verification-token="@tokens.RequestToken"
      data-toast-messages='@Html.Raw(toastJson)'>
    <div class="toast-container position-fixed top-0 end-0 p-3" id="toastContainer" style="z-index: 1100;"></div>
    <div id="mainContent" style="display:none;">
        <div class="container-fluid">
            <div class="row">
                <div class="col pt-3">

                    <div class="d-flex justify-content-between align-items-center flex-wrap">
                        <h3 class="team-header">@Model.Team.Name</h3>

                        @if (isOwnTeam)
                        {
                            <a asp-controller="Team" asp-action="Settings" asp-route-teamId="@teamId" class="btn btn-outline-secondary">
                                ⚙️ Settings
                            </a>
                        }
                    </div>

                    <hr style="width: 100%; margin: 0.5rem 0; border-top: 2px solid #444;" />

                    <div class="mb-3">
                        <div class="d-flex justify-content-between align-items-end flex-wrap w-100">
                            <form method="get" asp-action="View" asp-controller="Team" class="d-flex align-items-end">
                                <input type="hidden" name="teamId" value="@ViewBag.TeamId" />
                                <div>
                                    <label for="viewTeamId">Team:</label>
                                    <select name="viewTeamId" class="form-select team-dropdown" onchange="this.form.submit()">
                                        @foreach (var t in teams)
                                        {
                                            <option value="@t.TeamId" selected="@(t.TeamId == selectedTeamId ? "selected" : null)">@t.Name</option>
                                        }
                                    </select>
                                </div>
                            </form>
                        </div>
                    </div>

                    <hr style="width: 100%; margin: 0.5rem 0; border-top: 2px solid #444;" />

                    <div class="row justify-content-left roster-row">
                        <h4 class="mb-4">Current Roster</h4>
                        @foreach (var rosterGroup in types)
                        {
                            var players = Model.Roster.Where(tp => tp.Status.ToString() == rosterGroup.Key).ToList();

                            <div class="col-auto roster-section">
                                <h5>@rosterGroup.Label</h5>

                                @for (int i = 0; i < rosterGroup.Count; i++)
                                {
                                    var tp = i < players.Count ? players[i] : null;
                                    var cardClass = tp != null ?
                                    "player-card " + (tp.Status == nameof(RosterStatus.Starter) ? "starter-card" : tp.Status == nameof(RosterStatus.Bench) ? "bench-card" : "ir-card")
                                    : "player-card";

                                    <div class="drop-slot @(!isOwnTeam ? "locked-slot" : "")" data-status="@rosterGroup.Key">
                                        @if (tp != null)
                                        {
                                            @if (isOwnTeam)
                                            {
                                                <div class="@cardClass draggable-player"
                                                     draggable="true"
                                                     data-id="@tp.PDGANumber"
                                                     data-name="@tp.Player.Name">
                                                    @tp.Player.Name
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="@cardClass">@tp.Player.Name</div>
                                            }
                                        }
                                    </div>
                                }
                            </div>
                        }
                    </div>

                    @if (isOwnTeam)
                    {
                        <button class="btn btn-danger ms-auto mt-3" onclick="openLockModal()">Lock Roster For Tournament</button>
                    }

                </div>
            </div>
        </div>

        <div id="lockModal" class="modal" tabindex="-1">
            <div class="modal-content bg-white p-4 rounded">
                <div class="modal-header">
                    <h5 class="modal-title">Select Tournament to Lock</h5>
                    <button type="button" class="btn-close" onclick="closeLockModal()"></button>
                </div>
                <div class="modal-body">
                    <form method="post" asp-action="LockRoster">
                        <input type="hidden" name="teamId" value="@ViewBag.TeamId" />
                        <label for="tournamentId">Tournament:</label>
                        <select id="lockTournamentDropdown" name="tournamentId" class="form-select" onchange="loadStarterPreview(); updateLockButtonLabel();">
                            @foreach (var t in ViewBag.AllTournaments as List<TournamentLockViewModel>)
                            {
                                <option value="@t.Id" data-locked="@t.IsLocked.ToString().ToLower()">
                                    @t.Name @(t.IsLocked ? "(Locked)" : "")
                                </option>
                            }
                        </select>

                        <div id="starterPreview" class="mt-3"></div>

                        <button type="submit" class="btn btn-success mt-3" id="lockButton"></button>
                    </form>
                </div>
            </div>
        </div>

        <div id="playerModal">
            <div class="modal-content bg-white p-4 rounded">
                <button onclick="closeModal()"
                        style="position:absolute; top:10px; right:15px; border:none; background:none; font-size:1.5rem; cursor:pointer;">
                    &times;
                </button>
                <h4 id="playerModalName"></h4>
                <p>PDGA #: <span id="playerModalId"></span></p>

                <p><strong>World Ranking:</strong> <span id="modalWorldRanking">-</span></p>
                <p><strong>Total Fantasy Points:</strong> <span id="modalTotalPoints">-</span></p>
                <p><strong>Average Finish:</strong> <span id="modalAvgPlace">-</span></p>
                <p><strong>Tournaments Played:</strong> <span id="modalCount">-</span></p>

                <form method="post" asp-controller="Team" asp-action="DropPlayer">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="teamId" value="@ViewBag.TeamId" />
                    <input type="hidden" name="pdgaNumber" id="modalPdgaNumber" />
                    <input type="hidden" name="tournamentId" value="@ViewBag.SelectedTournamentId" />
                    <button type="submit" class="btn btn-danger mt-2">Drop Player</button>
                </form>
            </div>
        </div>

    </div>
</body>
